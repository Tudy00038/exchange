{
    "hints": {
        "createApplication(asset,asset,uint64)void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "setExchangeRate(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "optInToAssets(pay)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "exchangePoints(axfer,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "deleteApplication()void": {
            "call_config": {
                "delete_application": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuZXhjaGFuZ2VfcG9pbnRzLmNvbnRyYWN0LkxveWFsdHlFeGNoYW5nZUNvbnRyYWN0LmNsZWFyX3N0YXRlX3Byb2dyYW06CiAgICBpbnQgMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 3
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "exchange_rate": {
                    "type": "uint64",
                    "key": "exchange_rate"
                },
                "lei_laciaun_points_asset_id": {
                    "type": "uint64",
                    "key": "lei_laciaun_points_asset_id"
                },
                "lei_ograda_points_asset_id": {
                    "type": "uint64",
                    "key": "lei_ograda_points_asset_id"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "LoyaltyExchangeContract",
        "methods": [
            {
                "name": "createApplication",
                "args": [
                    {
                        "type": "asset",
                        "name": "lei_ograda_points"
                    },
                    {
                        "type": "asset",
                        "name": "lei_laciaun_points"
                    },
                    {
                        "type": "uint64",
                        "name": "exchange_rate"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "setExchangeRate",
                "args": [
                    {
                        "type": "uint64",
                        "name": "new_rate"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "optInToAssets",
                "args": [
                    {
                        "type": "pay",
                        "name": "mbrPay"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "exchangePoints",
                "args": [
                    {
                        "type": "axfer",
                        "name": "ograda_transfer"
                    },
                    {
                        "type": "uint64",
                        "name": "quantity"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "deleteApplication",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}