#pragma version 10

smart_contracts.exchange_points.contract.LoyaltyExchangeContract.approval_program:
    callsub __puya_arc4_router__
    return


// smart_contracts.exchange_points.contract.LoyaltyExchangeContract.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___after_if_else@10
    method "createApplication(asset,asset,uint64)void"
    method "setExchangeRate(uint64)void"
    method "optInToAssets(pay)void"
    method "exchangePoints(axfer,uint64)void"
    method "deleteApplication()void"
    txna ApplicationArgs 0
    match __puya_arc4_router___createApplication_route@2 __puya_arc4_router___setExchangeRate_route@3 __puya_arc4_router___optInToAssets_route@4 __puya_arc4_router___exchangePoints_route@5 __puya_arc4_router___deleteApplication_route@6
    int 0
    retsub

__puya_arc4_router___createApplication_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    !
    assert // is creating
    txna ApplicationArgs 1
    btoi
    txnas Assets
    txna ApplicationArgs 2
    btoi
    txnas Assets
    txna ApplicationArgs 3
    btoi
    callsub createApplication
    int 1
    retsub

__puya_arc4_router___setExchangeRate_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    callsub setExchangeRate
    int 1
    retsub

__puya_arc4_router___optInToAssets_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txn GroupIndex
    int 1
    -
    dup
    gtxns TypeEnum
    int pay
    ==
    assert // transaction type is pay
    callsub optInToAssets
    int 1
    retsub

__puya_arc4_router___exchangePoints_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txn GroupIndex
    int 1
    -
    dup
    gtxns TypeEnum
    int axfer
    ==
    assert // transaction type is axfer
    txna ApplicationArgs 1
    btoi
    callsub exchangePoints
    int 1
    retsub

__puya_arc4_router___deleteApplication_route@6:
    txn OnCompletion
    int DeleteApplication
    ==
    assert // OnCompletion is DeleteApplication
    txn ApplicationID
    assert // is not creating
    callsub deleteApplication
    int 1
    retsub

__puya_arc4_router___after_if_else@10:
    int 0
    retsub


// smart_contracts.exchange_points.contract.LoyaltyExchangeContract.createApplication(lei_ograda_points: uint64, lei_laciaun_points: uint64, exchange_rate: uint64) -> void:
createApplication:
    proto 3 0
    byte "lei_ograda_points_asset_id"
    frame_dig -3
    app_global_put
    byte "lei_laciaun_points_asset_id"
    frame_dig -2
    app_global_put
    byte "exchange_rate"
    frame_dig -1
    app_global_put
    retsub


// smart_contracts.exchange_points.contract.LoyaltyExchangeContract.setExchangeRate(new_rate: uint64) -> void:
setExchangeRate:
    proto 1 0
    txn Sender
    global CreatorAddress
    ==
    assert
    byte "exchange_rate"
    frame_dig -1
    app_global_put
    retsub


// smart_contracts.exchange_points.contract.LoyaltyExchangeContract.optInToAssets(mbrPay: uint64) -> void:
optInToAssets:
    proto 1 0
    txn Sender
    global CreatorAddress
    ==
    assert
    global CurrentApplicationAddress
    int 0
    byte "lei_ograda_points_asset_id"
    app_global_get_ex
    assert // check self.lei_ograda_points_asset_id exists
    asset_holding_get AssetBalance
    bury 1
    bnz optInToAssets_after_if_else@3
    frame_dig -1
    gtxns Receiver
    global CurrentApplicationAddress
    ==
    assert
    frame_dig -1
    gtxns Amount
    global MinBalance
    global AssetOptInMinBalance
    +
    ==
    assert
    itxn_begin
    int 0
    byte "lei_ograda_points_asset_id"
    app_global_get_ex
    assert // check self.lei_ograda_points_asset_id exists
    global CurrentApplicationAddress
    int 0
    itxn_field AssetAmount
    itxn_field AssetReceiver
    itxn_field XferAsset
    int axfer
    itxn_field TypeEnum
    int 0
    itxn_field Fee
    itxn_submit

optInToAssets_after_if_else@3:
    global CurrentApplicationAddress
    int 0
    byte "lei_laciaun_points_asset_id"
    app_global_get_ex
    assert // check self.lei_laciaun_points_asset_id exists
    asset_holding_get AssetBalance
    bury 1
    bnz optInToAssets_after_if_else@6
    frame_dig -1
    gtxns Receiver
    global CurrentApplicationAddress
    ==
    assert
    frame_dig -1
    gtxns Amount
    global MinBalance
    global AssetOptInMinBalance
    +
    ==
    assert
    itxn_begin
    int 0
    byte "lei_laciaun_points_asset_id"
    app_global_get_ex
    assert // check self.lei_laciaun_points_asset_id exists
    global CurrentApplicationAddress
    int 0
    itxn_field AssetAmount
    itxn_field AssetReceiver
    itxn_field XferAsset
    int axfer
    itxn_field TypeEnum
    int 0
    itxn_field Fee
    itxn_submit

optInToAssets_after_if_else@6:
    retsub


// smart_contracts.exchange_points.contract.LoyaltyExchangeContract.exchangePoints(ograda_transfer: uint64, quantity: uint64) -> void:
exchangePoints:
    proto 2 0
    frame_dig -2
    gtxns XferAsset
    int 0
    byte "lei_ograda_points_asset_id"
    app_global_get_ex
    assert // check self.lei_ograda_points_asset_id exists
    ==
    assert
    frame_dig -2
    gtxns AssetReceiver
    global CurrentApplicationAddress
    ==
    assert
    frame_dig -2
    gtxns AssetAmount
    frame_dig -1
    ==
    assert
    int 0
    byte "exchange_rate"
    app_global_get_ex
    assert // check self.exchange_rate exists
    frame_dig -1
    *
    itxn_begin
    int 0
    byte "lei_laciaun_points_asset_id"
    app_global_get_ex
    assert // check self.lei_laciaun_points_asset_id exists
    frame_dig -2
    gtxns Sender
    uncover 2
    itxn_field AssetAmount
    itxn_field AssetReceiver
    itxn_field XferAsset
    int axfer
    itxn_field TypeEnum
    int 0
    itxn_field Fee
    itxn_submit
    retsub


// smart_contracts.exchange_points.contract.LoyaltyExchangeContract.deleteApplication() -> void:
deleteApplication:
    proto 0 0
    txn Sender
    global CreatorAddress
    ==
    assert
    itxn_begin
    int 0
    byte "lei_ograda_points_asset_id"
    app_global_get_ex
    assert // check self.lei_ograda_points_asset_id exists
    global CreatorAddress
    dup
    itxn_field AssetCloseTo
    int 0
    itxn_field AssetAmount
    itxn_field AssetReceiver
    itxn_field XferAsset
    int axfer
    itxn_field TypeEnum
    int 0
    itxn_field Fee
    itxn_submit
    itxn_begin
    int 0
    byte "lei_laciaun_points_asset_id"
    app_global_get_ex
    assert // check self.lei_laciaun_points_asset_id exists
    global CreatorAddress
    dup
    itxn_field AssetCloseTo
    int 0
    itxn_field AssetAmount
    itxn_field AssetReceiver
    itxn_field XferAsset
    int axfer
    itxn_field TypeEnum
    int 0
    itxn_field Fee
    itxn_submit
    itxn_begin
    global CreatorAddress
    dup
    itxn_field CloseRemainderTo
    int 0
    itxn_field Amount
    itxn_field Receiver
    int pay
    itxn_field TypeEnum
    int 0
    itxn_field Fee
    itxn_submit
    retsub
